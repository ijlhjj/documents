0、安装/更新/删除 软件包时发生了什么
	动作成功执行时，事物包含五大步骤和事物钩子程序:

	如果数据库未被锁定，初始化事物
	确认事务中要添加或删除的软件包
	准备事物，根据参数，对同步数据库、软件包和依赖关系进行校验
	提交事物:
	如果需要，下载软件包 (_alpm_sync_load)
	如果有可以执行的 pacman PreTransaction 钩子，执行这些钩子.
	被替换、出现冲突或被指定删除的软件包将会被删除
	如果需要添加软件包，每个软件包都会执行提交
	如果有安装脚本，执行 pre_install 函数(更新时执行 pre_upgrade，删除时执行 pre_remove).
	pacman 删除软件包之前版本的所有文件 (在更新或删除软件包时)。配置文件将会被保留 (请参阅 Pacman (简体中文)/Pacnew and Pacsave (简体中文)).
	pacman 将软件包文件解压到系统(安装或升级软件包时). 会覆盖旧的已被手动修改的配置文件时，配置文件会命名为 (.pacnew).
	如果软件包有安装脚本，执行 post_install 函数(更新时执行 post_upgrade，删除时执行 post_remove).
	如果pacman PostTransaction 钩子可执行，执行这些钩子.
	释放事物及事物资源 (例如，数据库锁)

1、安装或者升级单个软件包，或者一列软件包（包含依赖包），使用如下命令：
	pacman -S package_name1 package_name2
	
	注意： 如果列表中的包已经安装在系统中，它会被重新安装，即使它已经是最新的。可以用 --needed 选项覆盖这种行为。
	
	pacman -S --needed base-devel mingw-w64-x86_64-toolchain
	
	强制安装virtualbox包
		pacman -Sf virtualbox
	
2、安装包组：
	pacman -S 包组名称
	
	可在https://archlinux.org/groups/查看可用包组
	
	Enter a selection (default=all): 1-10 15
	这将选中序号 1 至 10 和 15 的软件包。而

	Enter a selection (default=all): ^5-8 ^2
	将会选中除了序号 5 至 8 和 2 之外的所有软件包。

4、删除单个软件包，保留其全部已经安装的依赖关系：
	pacman -R package_name
	
	强制删除被依赖的包(慎用)
		pacman -Rd virtualbox
	删除virtualbox包及依赖其的包
		pacman -Rc virtualbox
	
	（这个命令需要确认）
	删除virtualbox包及其依赖的包
		pacman -Rsc virtualbox
	要删除软件包和所有依赖这个软件包的程序:  警告：此操作是递归的，请小心检查，可能会一次删除大量的软件包。
	pacman -Rsc package_name

5、删除指定软件包，及其所有没有被其他已安装软件包使用的依赖关系：
	pacman -Rs package_name
	pacman -Rsu package_name	# 强制执行
	
8、查询包数据库
	pacman 使用 -Q 参数查询本地软件包数据库， -S 查询同步数据库，以及 -F查询文件数据库。
	要了解每个参数的子选项，分别参见 pacman -Q --help，pacman -S --help和pacman -F --help。
	
9、查询已安装的软件包：
	$ pacman -Qs string1 string2 ...

	列出已经安装的软件包
		pacman -Q
	查看virtualbox包是否已经安装
		pacman -Q virtualbox
	查看已安装的包virtualbox的详细信息
		pacman -Qi virtualbox
	列出已安装包virtualbox的所有文件
		pacman -Ql virtualbox
		
	查询包组
		pacman -Sg	
	查询包组所包含的软件包
		pacman -Sg gnome	
	搜索virtualbox相关的包
		pacman -Ss virtualbox
	显示软件包的详尽的信息：
		pacman -Si virtualbox
	
	仅同步源
		pacman -Sy
	更新系统
		pacman -Su
	同步源并更新系统
		pacman -Syu
		
	同步源并更新系统后安装其他软件包：
		pacman -Syu package_name1 package_name2 ...

	升级时不升级virtualbox包
		pacman -Su --ignore virtualbox


13、查询远程库中软件包包含的文件：
	pacman -Fl package_name

14、检查软件包安装的文件是否都存在：
	pacman -Qk package_name
	
15、查询数据库获取某个文件属于哪个软件包：
	pacman -Qo /path/to/file_name

16、查询文件属于远程数据库中的哪个软件包：
	pacman -F /path/to/file_name

17、要罗列所有不再作为依赖的软件包
	pacman -Qdt

18、要罗列所有明确安装而且不被其它包依赖的软件包：
	pacman -Qet

19、要显示软件包的依赖树：
	pactree package_name
	
	检查一个安装的软件包被那些包依赖，将递归标识-r传递给 pactree

20、清理软件包缓存：
	paccache -r
		
	pacman 将下载的软件包保存在 /var/cache/pacman/pkg/ 并且不会自动移除旧的和未安装版本的软件包。

	要删除目前没有安装的所有缓存的包
		pacman -Sc

	要删除缓存中的全部文件，使用两次-c开关。这是最为激进的方式，将会清空缓存文件夹：
		pacman -Scc

21、下载包而不安装它：
	pacman -Sw package_name

22、安装一个本地包(不从源里下载）：
	pacman -U /path/to/package/package_name-version.pkg.tar.zst

23、安装一个远程包（不在 pacman 配置的源里面）：
	pacman -U http://www.example.com/repo/example.pkg.tar.zst

24、显式安装的软件包列表可用pacman -Qe获取, 与之互补的已安装的依赖包可用pacman -Qd获取。

25、改变某个已安装软件包的安装原因，可以执行：
	pacman -D --asdeps package_name

26、同步文件数据库:
	pacman -Fy

27、查询包含某个文件的包名，比如:
	pacman -F pacman
